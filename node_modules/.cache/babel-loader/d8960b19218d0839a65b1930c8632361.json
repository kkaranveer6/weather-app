{"ast":null,"code":"import _slicedToArray from \"/Users/karanveer/Desktop/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/karanveer/Desktop/weather-app/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const API_KEY = `0b3b530e772fd76341de3dada4786a6b`; // runs when search button is clicked\n\n  const getData = () => {\n    // fetching data from an API\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${query},aus&APPID=${API_KEY}&units=metric`).then(response => response.json()).then(res => setData(res)) // .then(data => console.log(data.main))\n    .catch(err => console.log('Something went wrong')); // setData(response);\n\n    console.log(data);\n  };\n\n  const updateSearch = event => {\n    setQuery(event.target.value); // if(event.key === 'Enter'){\n    // \tgetData();\n    // }\n\n    console.log(event.target.value);\n  }; // state\n\n\n  const _useState = useState('adelaide'),\n        _useState2 = _slicedToArray(_useState, 2),\n        query = _useState2[0],\n        setQuery = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        data = _useState4[0],\n        setData = _useState4[1];\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Weather App\"), React.createElement(\"input\", {\n    name: \"City Search\",\n    type: \"text\",\n    placeholder: \"Enter City\",\n    onKeyPress: updateSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: getData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Search\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/karanveer/Desktop/weather-app/src/App.js"],"names":["React","useState","App","API_KEY","getData","fetch","query","then","response","json","res","setData","catch","err","console","log","data","updateSearch","event","setQuery","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAc;AACb,QAAMC,OAAO,GAAI,kCAAjB,CADa,CAGb;;AACA,QAAMC,OAAO,GAAG,MAAM;AACrB;AACCC,IAAAA,KAAK,CAAE,oDAAmDC,KAAM,cAAaH,OAAQ,eAAhF,CAAL,CACMI,IADN,CACWC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADvB,EAEMF,IAFN,CAEWG,GAAG,IAAIC,OAAO,CAACD,GAAD,CAFzB,EAGK;AAHL,KAIME,KAJN,CAIYC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAJnB,EAFoB,CAOpB;;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA,GATF;;AAWA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC/BC,IAAAA,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAR,CAD+B,CAE/B;AACA;AACA;;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,CAACE,MAAN,CAAaC,KAAzB;AACA,GAND,CAfa,CAuBZ;;;AAvBY,oBAwBapB,QAAQ,CAAC,UAAD,CAxBrB;AAAA;AAAA,QAwBNK,KAxBM;AAAA,QAwBCa,QAxBD;;AAAA,qBAyBWlB,QAAQ,CAAC,EAAD,CAzBnB;AAAA;AAAA,QAyBNe,IAzBM;AAAA,QAyBAL,OAzBA;;AA4Bb,SACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AACC,IAAA,IAAI,EAAG,aADR;AAEC,IAAA,IAAI,EAAG,MAFR;AAGC,IAAA,WAAW,EAAG,YAHf;AAIC,IAAA,UAAU,EAAIM,YAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE;AACC,IAAA,OAAO,EAAIb,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADD;AAgBA;;AAID,eAAeF,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App(){\n\tconst API_KEY = `0b3b530e772fd76341de3dada4786a6b`;\n\n\t// runs when search button is clicked\n\tconst getData = () => {\n\t\t// fetching data from an API\n\t\t\tfetch(`http://api.openweathermap.org/data/2.5/weather?q=${query},aus&APPID=${API_KEY}&units=metric`)\n\t\t\t\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t\t\t\t.then(res => setData(res))\n\t\t\t\t\t\t\t\t// .then(data => console.log(data.main))\n\t\t\t\t\t\t\t\t.catch(err => console.log('Something went wrong'))\n\t\t\t// setData(response);\n\t\t\tconsole.log(data);\n\t\t}\n\t\n\tconst updateSearch = (event) => {\n\t\tsetQuery(event.target.value);\n\t\t// if(event.key === 'Enter'){\n\t\t// \tgetData();\n\t\t// }\n\t\tconsole.log(event.target.value);\n\t}\n\n\t\t// state\n\tconst [query, setQuery] = useState('adelaide');\n\tconst [data, setData] = useState('');\n\n\t\n\treturn (\n\t\t<div className=\"App\">\n\t\t  <h1>Weather App</h1>\n\t\t  <input \n\t\t  \tname = \"City Search\" \n\t\t  \ttype = \"text\" \n\t\t  \tplaceholder = \"Enter City\"\n\t\t  \tonKeyPress = {updateSearch}\n \t\t  />\n\t\t  <button \n\t\t  \tonClick = {getData}\n\t\t  >\n\t\t  \tSearch\n\t\t  </button>\n\t\t</div>\n\t);\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}