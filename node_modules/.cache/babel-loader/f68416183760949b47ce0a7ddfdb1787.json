{"ast":null,"code":"import _slicedToArray from \"/Users/karanveer/Desktop/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/karanveer/Desktop/weather-app/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const API_KEY = `0b3b530e772fd76341de3dada4786a6b`; // state\n\n  const _useState = useState('adelaide'),\n        _useState2 = _slicedToArray(_useState, 2),\n        query = _useState2[0],\n        setQuery = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        data = _useState4[0],\n        setData = _useState4[1]; // runs when search button is clicked\n\n\n  const getData = () => {\n    // fetching data from an API\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${query},aus&APPID=${API_KEY}&units=metric`).then(response => response.json()).then(console.log('response to json')).then(res => setData(res)).then(console.log('setting the data state to the response')).then(console.log(data)).catch(err => console.log('Something went wrong'));\n  };\n\n  const updateSearch = event => {\n    setQuery(event.target.value);\n\n    if (event.key === 'Enter') {\n      getData();\n    } // console.log(event.target.value);\n\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Weather App\"), React.createElement(\"input\", {\n    name: \"City Search\",\n    type: \"text\",\n    placeholder: \"Enter City\",\n    onKeyPress: updateSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: getData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Search\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/karanveer/Desktop/weather-app/src/App.js"],"names":["React","useState","App","API_KEY","query","setQuery","data","setData","getData","fetch","then","response","json","console","log","res","catch","err","updateSearch","event","target","value","key"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAc;AACb,QAAMC,OAAO,GAAI,kCAAjB,CADa,CAGb;;AAHa,oBAIaF,QAAQ,CAAC,UAAD,CAJrB;AAAA;AAAA,QAING,KAJM;AAAA,QAICC,QAJD;;AAAA,qBAKWJ,QAAQ,CAAC,EAAD,CALnB;AAAA;AAAA,QAKNK,IALM;AAAA,QAKAC,OALA,kBAQb;;;AACA,QAAMC,OAAO,GAAG,MAAM;AACrB;AACCC,IAAAA,KAAK,CAAE,oDAAmDL,KAAM,cAAaD,OAAQ,eAAhF,CAAL,CACEO,IADF,CACOC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADnB,EAEEF,IAFF,CAEOG,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAFP,EAIEJ,IAJF,CAIOK,GAAG,IAAIR,OAAO,CAACQ,GAAD,CAJrB,EAKEL,IALF,CAKOG,OAAO,CAACC,GAAR,CAAY,wCAAZ,CALP,EAOEJ,IAPF,CAOOG,OAAO,CAACC,GAAR,CAAYR,IAAZ,CAPP,EAQEU,KARF,CAQQC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAY,sBAAZ,CARf;AASA,GAXF;;AAaA,QAAMI,YAAY,GAAIC,KAAD,IAAW;AAC/Bd,IAAAA,QAAQ,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;;AAEA,QAAGF,KAAK,CAACG,GAAN,KAAc,OAAjB,EAAyB;AACxBd,MAAAA,OAAO;AACP,KAL8B,CAO/B;;AACA,GARD;;AAUA,SACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AACC,IAAA,IAAI,EAAG,aADR;AAEC,IAAA,IAAI,EAAG,MAFR;AAGC,IAAA,WAAW,EAAG,YAHf;AAIC,IAAA,UAAU,EAAIU,YAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE;AACC,IAAA,OAAO,EAAIV,OADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADD;AAgBA;;AAID,eAAeN,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App(){\n\tconst API_KEY = `0b3b530e772fd76341de3dada4786a6b`;\n\n\t// state\n\tconst [query, setQuery] = useState('adelaide');\n\tconst [data, setData] = useState('');\n\n\n\t// runs when search button is clicked\n\tconst getData = () => {\n\t\t// fetching data from an API\n\t\t\tfetch(`http://api.openweathermap.org/data/2.5/weather?q=${query},aus&APPID=${API_KEY}&units=metric`)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(console.log('response to json'))\n\n\t\t\t\t.then(res => setData(res))\n\t\t\t\t.then(console.log('setting the data state to the response'))\n\n\t\t\t\t.then(console.log(data))\n\t\t\t\t.catch(err => console.log('Something went wrong'))\n\t\t}\n\t\n\tconst updateSearch = (event) => {\n\t\tsetQuery(event.target.value);\n\t\t\n\t\tif(event.key === 'Enter'){\n\t\t\tgetData();\n\t\t}\n\n\t\t// console.log(event.target.value);\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t  <h1>Weather App</h1>\n\t\t  <input \n\t\t  \tname = \"City Search\" \n\t\t  \ttype = \"text\" \n\t\t  \tplaceholder = \"Enter City\"\n\t\t  \tonKeyPress = {updateSearch}\n \t\t  />\n\t\t  <button \n\t\t  \tonClick = {getData}\n\t\t  >\n\t\t  \tSearch\n\t\t  </button>\n\t\t</div>\n\t);\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}